
<% if @unicorn %>
upstream <%= @app_name %>_upstream {
  server unix:/var/run/engineyard/unicorn_<%= @app_name %>.sock fail_timeout=0;
}
<% else %>
  <% unless @mongrel_base_port.nil? %>
upstream <%= @app_name %>_upstream {
  <% (@mongrel_base_port).upto(@mongrel_base_port + (@mongrel_instance_count - 1)) do |port| %>
   server 127.0.0.1:<%= port %>;
  <% end %>
}
  <% end %>
<% end %>

server {
  listen <%= @http_bind_port %>;

  <% if @server_names and !@server_names.empty? %>
  <%= "server_name #{@server_names.join(" ")};" %>
  <% else %>
  server_name _;
  <% end %>

  root /data/<%= @app_name %>/current/public;
  
  access_log /var/log/engineyard/nginx/<%= @app_name %>.access.log main;

  error_log /var/log/engineyard/nginx/<%= @app_name %>.error.log notice;
  # error_log /dev/null notice;

  include /etc/nginx/common/servers.conf;

  include /etc/nginx/servers/<%= @app_name %>.rewrites;
  include /etc/nginx/servers/<%= @app_name %>/custom.locations.conf;

  location / {
  <% if @application[:auth] && @application[:auth][:active] == "true" && @application[:auth][:path] == "/" ? true : false %>
    auth_basic            "Restricted";
    auth_basic_user_file  /etc/nginx/servers/<%= @app_name %>.users;
  <% else %>
    # auth is disabled for this server
    # auth_basic            "Restricted";
    # auth_basic_user_file  /etc/nginx/servers/<%=@app_name %>.users;
  <% end %>

    include /etc/nginx/common/proxy.conf;

    if (!-f $request_filename) {
      proxy_pass http://<%= @app_name %>_upstream;
      break;
    }
  }
  
  location = /500.html {
    root /data/<%= @app_name %>/current/public;
  }
}
