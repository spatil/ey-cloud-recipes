#!/bin/sh
#
# This script starts and stops the BackgrounDRb server
# This script belongs in /engineyard/bin/backgroundrb
#

usage() {
  echo "Usage: $0 <application_name> {start, stop} [environment]"
  exit 1
}

if [ $# -lt 2 ]; then usage; fi

CURDIR=`pwd`
PATH=/bin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:$PATH
application="$1"
INLINEDIR="/data/$application/.ruby_inline" ; export INLINEDIR
HOME="/home/`whoami`" ; export HOME

if [ "$3" != "" ] ; then
  RAILS_ENV="$3"
else
  RAILS_ENV=<%= @rails_env %>
fi
export RAILS_ENV

if [ -d /data/$application/current ] ; then
  cd /data/$application/current

  mkdir -p /var/log/engineyard/backgroundrb/$application

  # source a backgroundrb.conf file if people need to override RAILS_ENV etc
  if [ -f /data/$application/shared/config/backgroundrb.conf ]; then
    . /data/$application/shared/config/backgroundrb.conf
  fi

  cd /data/$application/current

  # handle the second param, don't start if already existing
  case "$2" in
    start)
      echo "Starting BackgrounDRb server."
      if [ -f /data/$application/shared/log/backgroundrb.pid ]; then
        PID=`cat /data/$application/shared/log/backgroundrb.pid`
        if [ ! -d /proc/$PID ]; then
          rm -f /data/$application/shared/log/backgroundrb.pid
        fi
      fi
      # this directory will always be empty since backgroundrb is (wrongly) putting the socket in /tmp
      #  (the uri is being generated in Conf before socket_dir can be set)
      if [ -f /data/$application/shared/log/backgroundrb.ppid ]; then
        PID=`cat /data/$application/shared/log/backgroundrb.ppid`
        rm -Rf /tmp/backgroundrb.$PID
      fi
      # this wouldn't be necessary if it were in the location that it's (presumably) meant to be in
      rm -f /tmp/backgroundrbunix_localhost_2000
      rm -f /data/$application/shared/log/backgroundrb.ppid

      /usr/bin/nohup /usr/bin/ruby /data/$application/current/script/backgroundrb start
      ;;
    stop)
      echo "Stopping BackgrounDRb server."
      pid=`ps auxww | grep $application | grep backgroundrb | awk '{print $2}'`
      kill -QUIT $pid 2&1> /dev/null; true
      sleep 3
      kill -9 $pid 2&1> /dev/null; true
      ;;
    *)
      usage
      ;;
	esac
else
  echo "/data/$application/current doesn't exist."
  usage
fi
cd $CURDIR
